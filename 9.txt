import matplotlib.pyplot as plt
from sklearn.datasets import fetch_olivetti_faces
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

X, y = fetch_olivetti_faces(shuffle=True, random_state=42, return_X_y=True)
Xtr, Xte, ytr, yte = train_test_split(X, y, test_size=0.3, stratify=y, random_state=12)
yp = GaussianNB().fit(Xtr, ytr).predict(Xte)

print(f"Accuracy: {accuracy_score(yte, yp)*100:.2f}%\n")
print(classification_report(yte, yp, zero_division=1))
print("Confusion Matrix:\n", confusion_matrix(yte, yp))

fig, axs = plt.subplots(3, 5, figsize=(12, 8))
for ax, img, t, p in zip(axs.ravel(), Xte, yte, yp):
    ax.imshow(img.reshape(64, 64), cmap='gray')
    ax.set_title(f"True: {t} Pred: {p}")
    ax.axis('off')
plt.tight_layout()
plt.show()